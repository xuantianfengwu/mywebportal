{"version":3,"sources":["pages/Login.tsx","api/login.ts"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","Login","props","context","formRef","login","form","userid","password","request","url","method","data","then","response","code","msg","reg","RegExp","params","location","search","substr","match","origin_url","console","log","message","success","window","href","error","createRef","id","ref","this","onFinish","Item","label","name","rules","type","required","Password","htmlType","Component","withRouter"],"mappings":"qQAOMA,EAAS,CACXC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAEjBE,EAAa,CACfD,WAAY,CAACE,OAAQ,EAAGH,KAAM,KAO5BI,E,kDAGF,WAAYC,EAAYC,GAAe,IAAD,8BAClC,cAAMD,EAAOC,IAHjBC,aAEsC,IAKtCC,MAAQ,SAACC,GCzBQ,IAACC,EAAgBC,GAAhBD,ED0BRD,EAAKC,OC1BmBC,ED0BXF,EAAKE,SCzBrBC,YAAQ,CACXC,IAAQ,eACRC,OAAQ,OACRC,KAAQ,CAACL,OAAQA,EACRC,SAAUA,MDqBeK,MAAK,SAAAC,GACnC,MAA0BA,EAASF,KAA5BG,EAAP,EAAOA,KAAMC,EAAb,EAAaA,IAEPC,GAFN,EAAkBL,KAEN,IAAIM,OAAO,0BACjBC,EAAS,EAAKjB,MAAMkB,SAASC,OAAOC,OAAO,GAAGC,MAAMN,GACpDO,EAAaL,EAAOA,EAAO,GAAG,IACpCM,QAAQC,IAAI,cAAeF,GAEd,MAATT,GACAY,IAAQC,QAAQZ,GAChBa,OAAOT,SAASU,KAAON,GAEvBG,IAAQI,MAAMf,OAhBtB,EAAKZ,QAAU4B,sBAFmB,E,0CAuBtC,WACI,OACI,qBAAKC,GAAG,QAAR,SACI,eAAC,IAAD,yBACIA,GAAG,cACCtC,GAFR,IAGIuC,IAAKC,KAAK/B,QACVgC,SAAUD,KAAK9B,MAJnB,UAMI,cAAC,IAAKgC,KAAN,CAAYC,MAAM,qBAAMC,KAAK,SACjBC,MAAO,CAAC,CAAIC,KAAM,SACNC,UAAU,IAFlC,SAMI,cAAC,IAAD,MAGJ,cAAC,IAAKL,KAAN,CAAYC,MAAM,eAAKC,KAAK,WAChBC,MAAO,CAAC,CAAEC,KAAM,SACNC,UAAU,IAFhC,SAMI,cAAC,IAAMC,SAAP,MAGJ,cAAC,IAAKN,KAAN,2BAAetC,GAAf,aACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQ0C,KAAK,UAAUG,SAAS,SAAhC,4BACA,cAAC,IAAD,CAAQH,KAAK,UAAUG,SAAS,QAAhC,6C,GAxDRC,aAkELC,sBAAW7C","file":"static/js/19.206f1469.chunk.js","sourcesContent":["import React, {Component, createRef, RefObject} from 'react';\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\nimport {Button, Form, FormInstance, Input, message, Space} from \"antd\";\r\nimport {login} from \"../api/login\";\r\nimport './Login.css'\r\n\r\nconst layout = {\r\n    labelCol: {span: 4},\r\n    wrapperCol: {span: 16},\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {offset: 8, span: 16},\r\n};\r\n\r\ninterface LoginProps extends RouteComponentProps{\r\n\r\n}\r\n\r\nclass Login extends Component<LoginProps, any> {\r\n    formRef: RefObject<FormInstance>\r\n\r\n    constructor(props: any, context: any) {\r\n        super(props, context);\r\n        this.formRef = createRef<FormInstance>()\r\n    }\r\n\r\n    login = (form: any) => {\r\n        login(form.userid, form.password).then(response => {\r\n            const {code, msg, data} = response.data;\r\n\r\n            const reg = new RegExp(\"(^|&)\" + 'url' + \"=([^&]*)(&|$)\");\r\n            const params = this.props.location.search.substr(1).match(reg);\r\n            const origin_url = params?params[2]:'/';\r\n            console.log('Origin Url:', origin_url);\r\n\r\n            if (code === 200) {\r\n                message.success(msg)\r\n                window.location.href = origin_url\r\n            } else {\r\n                message.error(msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='login'>\r\n                <Form\r\n                    id='login-form'\r\n                    {...layout}\r\n                    ref={this.formRef}\r\n                    onFinish={this.login}\r\n                >\r\n                    <Form.Item  label='用户名' name='userid'\r\n                                rules={[{   type: 'string',\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item  label='密码' name='password'\r\n                                rules={[{ type: 'string',\r\n                                          required: true\r\n                                        }\r\n                                    ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Space>\r\n                            <Button type=\"primary\" htmlType=\"submit\"> 登录 </Button>\r\n                            <Button type=\"primary\" htmlType=\"reset\">  重置 </Button>\r\n                        </Space>\r\n                    </Form.Item>\r\n\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import request from \"../utils/request\";\r\n\r\nexport const login = (userid: string, password: string) => {\r\n    return request({\r\n        url:    '/login/login',\r\n        method: 'post',\r\n        data:   {userid: userid,\r\n                 password: password\r\n                }\r\n    })\r\n}\r\n"],"sourceRoot":""}