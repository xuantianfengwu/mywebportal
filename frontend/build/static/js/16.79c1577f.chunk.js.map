{"version":3,"sources":["api/todos.ts","pages/TodoList/TodoList.tsx"],"names":["getTodosTask","request","url","TodoList","state","todos","then","response","data","console","log","message","setState","generateAddItemBtn","className","placeholder","type","generateDoneItemCalculator","generateTodoList","generateTodoItems","generateDoneList","itodos","is_complete","div_classname","i_classname","filter","itodo","map","task_name","id","this","Component"],"mappings":"uNAEaA,EAAe,WACxB,OAAOC,YAAQ,CACXC,IAAQ,iB,gBCkBVC,E,4MACFC,MAAQ,CACJC,MAAO,I,EAOPL,aAAe,WACXA,IAAeM,MAAK,SAACC,GACjB,IAAMF,EAAQE,EAASC,KAAKA,KAC5BC,QAAQC,IAAIH,EAASC,KAAKG,SAC1BF,QAAQC,IAAIL,GACZ,EAAKO,SAAS,CACVP,MAAOA,Q,EAKvBQ,mBAAqB,WACjB,OACI,sBAAMC,UAAU,GAAhB,SACI,sBAAKA,UAAU,mBAAf,UACI,uBAAOC,YAAY,WACZ,mBAAiB,eACjBC,KAAK,OACLF,UAAU,iBAEjB,qBAAKA,UAAU,qBAAf,SACI,wBAAQE,KAAK,SAASF,UAAU,kBAAhC,8B,EAOpBG,2BAA6B,WACzB,OACI,qBAAKH,UAAU,OAAf,SACI,sBAAKA,UAAU,wBAAf,yG,EAOZI,iBAAmB,WACf,OACI,sBAAKJ,UAAU,WAAf,UACK,EAAKD,qBACL,EAAKM,kBAAkB,EAAKf,MAAMC,OAAO,O,EAKtDe,iBAAmB,WACf,OACI,sBAAKN,UAAU,WAAf,UACK,EAAKG,6BACL,EAAKE,kBAAkB,EAAKf,MAAMC,OAAO,O,EAKlDc,kBAAoB,SAACE,EAAiBC,GACtC,IAAMC,EAAgBD,EAAc,iCAAmC,6BACjEE,EAAcF,EAAc,sBAAwB,gBAwB1D,OAvBmBD,EAAOI,QAAO,SAACC,GAC9B,OAAOA,EAAMJ,aAAeA,KAEHK,KAAI,SAACD,GAC9B,OACI,qBAAKZ,UAAWS,EAAhB,SACI,sBAAKT,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,wBAAQ,aAAW,wBAAwBE,KAAK,SACxCF,UAAU,8BADlB,SAEI,mBAAGA,UAAWU,QAGtB,qBAAKV,UAAU,cAAf,SAA8BY,EAAME,YACpC,qBAAKd,UAAU,2BAAf,SACI,wBAAQ,aAAW,cAAcE,KAAK,SAASF,UAAU,sBAAzD,SACI,mBAAGA,UAAU,oCAXOY,EAAMG,Q,uDApEtD,WACIC,KAAK9B,iB,oBAuGT,WACI,OACI,uDAEI,qBAAKc,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACKgB,KAAKZ,mBACLY,KAAKV,+B,GApHPW,aA4HR5B","file":"static/js/16.79c1577f.chunk.js","sourcesContent":["import request from \"../utils/request\";\r\n\r\nexport const getTodosTask = () => {\r\n    return request({\r\n        url:    '/todos/task',\r\n    })\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport \"./TodoList.css\";\r\nimport { getTodosTask } from \"../../api/todos\"\r\n\r\nimport \"../../static/css/bootstrap.min.css\";\r\n//import \"../../static/css/font-awesome/all.min.css\";\r\n\r\n//import GridLayout from 'react-grid-layout';\r\n//import 'react-grid-layout/css/styles.css'\r\n//import 'react-resizable/css/styles.css'\r\n\r\ninterface ITodo {\r\n    id:             number\r\n    task_name:      string\r\n    task_desc:      string\r\n    task_owner:     string\r\n    create_date:    string\r\n    last_modify_date: string\r\n    is_complete:    boolean\r\n}\r\n\r\nclass TodoList extends Component {\r\n    state = {\r\n        todos: [],\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.getTodosTask();\r\n    }\r\n\r\n        getTodosTask = () => {\r\n            getTodosTask().then((response)=>{\r\n                const todos = response.data.data;\r\n                console.log(response.data.message);\r\n                console.log(todos);\r\n                this.setState({\r\n                    todos: todos,\r\n                });\r\n            })\r\n        }\r\n\r\n    generateAddItemBtn = () => {\r\n        return (\r\n            <form className=\"\">\r\n                <div className=\"mb-3 input-group\">\r\n                    <input placeholder=\"New Item\"\r\n                           aria-describedby=\"basic-addon1\"\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <button type=\"submit\" className=\"btn btn-success\">Add Item</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    generateDoneItemCalculator = () => {\r\n        return (\r\n            <div className=\"mb-3\">\r\n                <div className=\"done-group-calculator\">\r\n                    任务统计：已完成： {}  | 进行中：{}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    generateTodoList = () => {\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                {this.generateAddItemBtn()}\r\n                {this.generateTodoItems(this.state.todos, false)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    generateDoneList = () => {\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                {this.generateDoneItemCalculator()}\r\n                {this.generateTodoItems(this.state.todos, true)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n        generateTodoItems = (itodos: ITodo[], is_complete: boolean) => {\r\n        const div_classname = is_complete ? \"item completed container-fluid\" : 'item false container-fluid';\r\n        const i_classname = is_complete ? \"far fa-check-square\" : 'far fa-square';\r\n        const new_itodos = itodos.filter((itodo)=>{\r\n            return itodo.is_complete == is_complete;\r\n        });\r\n        const todoitems = new_itodos.map((itodo)=>{\r\n            return(\r\n                <div className={div_classname} key={itodo.id}>\r\n                    <div className=\"row\">\r\n                        <div className=\"text-center col-1\">\r\n                            <button aria-label=\"Mark item as complete\" type=\"button\"\r\n                                    className=\"toggles btn btn-link btn-sm\">\r\n                                <i className={i_classname}></i>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"name col-10\">{itodo.task_name}</div>\r\n                        <div className=\"text-center remove col-1\">\r\n                            <button aria-label=\"Remove Item\" type=\"button\" className=\"btn btn-link btn-sm\">\r\n                                <i className=\"fa fa-trash text-danger\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return todoitems\r\n        // const layout = [\r\n        //                   {i: '1', x: 0, y: 0, w: 3, h: 2},\r\n        //                   {i: '2', x: 0, y: 2, w: 3, h: 2},\r\n        //                   {i: '3', x: 0, y: 4, w: 3, h: 2},\r\n        //                   {i: '4', x: 0, y: 6, w: 3, h: 2},\r\n        //                ];\r\n        // const layouted_todoitems = <GridLayout\r\n        //                                       className=\"layout\"\r\n        //                                       layout={layout}\r\n        //                                       cols={12}\r\n        //                                       rowHeight={30}\r\n        //                                       width={1200}>\r\n        //                                 {todoitems}\r\n        //                            </GridLayout>;\r\n        // return layouted_todoitems\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Welcome to TodoList!\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {this.generateTodoList()}\r\n                        {this.generateDoneList()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;"],"sourceRoot":""}