{"version":3,"sources":["components/TabContainer/TabContainer.tsx","api/trading.ts","pages/Trading/Forex/DataImport.tsx","components/EchartsForReact.tsx","pages/Trading/Forex/DataDisplay.tsx","pages/Trading/Forex/DataPredict.tsx","pages/Trading/Forex/ForexTrading.tsx"],"names":["TabContainer","state","currentIndex","props","curr_index","tabChoiced","id","setState","generateTabContent","tabs","map","tabinfo","display_style","className","style","tabCont","generateTabList","index","tabStyle","onClick","bind","tabName","this","tabList","Component","importUploadFile","f","f_type","data","FormData","append","name","request","url","method","headers","initializeDB","DataImport","upload_file","upload_file_type","generateInitializeBtn","handleInitializeBtnonClick","then","response","code","message","success","console","log","warn","generateUploadBtn","type","accept","onChange","handleUploadBtnonChange","e","filelist","currentTarget","files","length","generateRadioGroup","Group","options","label","value","handleRadioGrouponChange","target","generateSubmitBtn","handleSubmitBtnonClick","ReactEChartsTest","getOption","title","tooltip","legend","xAxis","yAxis","series","option","notMerge","lazyUpdate","PureComponent","DataDisplay","React","DataPredict","ForexTrading"],"mappings":"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","file":"static/js/13.93fed6e7.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Divider} from \"antd\";\r\n\r\nimport './TabContainer.css';\r\n\r\ninterface Itab {\r\n    id: number\r\n    tabName: string\r\n    tabCont: any\r\n}\r\n\r\ninterface ITabContainerProps {\r\n    tabs: Itab[]\r\n    curr_index?: number\r\n}\r\n\r\nexport default class TabContainer extends Component <ITabContainerProps, any> {\r\n    state = {\r\n        currentIndex: this.props.curr_index?this.props.curr_index:1,\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    tabChoiced=(id:number)=>{\r\n        //tab切换到方法\r\n        this.setState({\r\n            currentIndex:id\r\n        });\r\n    }\r\n\r\n    generateTabContent = (id:number) => {\r\n        let currentContent = this.props.tabs.map(\r\n                (tabinfo)=>{\r\n                    let display_style = tabinfo.id===id?'block':'none';\r\n                    return (\r\n                        <div className={'TabContent-Item'} style={{'display':display_style}}>\r\n                            {tabinfo.tabCont}\r\n                        </div>\r\n                    )\r\n                }\r\n            )\r\n        return currentContent\r\n    }\r\n\r\n    generateTabList = (curr_index: number) => {\r\n        let tabList = this.props.tabs.map(\r\n            (tabinfo: { id: any; tabName: any;}, index:number) => {\r\n                // 遍历标签页，如果标签的id等于tabid，那么该标签就加多一个active的className\r\n                var tabStyle=tabinfo.id==curr_index ? 'TabList-Item active' : 'TabList-Item';\r\n                return <div key={index}\r\n                           onClick={this.tabChoiced.bind(this, tabinfo.id)}\r\n                           className={tabStyle}>\r\n                           {tabinfo.tabName}\r\n                       </div>\r\n        });\r\n        return tabList\r\n    }\r\n\r\n    render() {\r\n        const curr_index = this.state.currentIndex;\r\n        const tabList= this.generateTabList(curr_index);\r\n        const tabCont = this.generateTabContent(curr_index);\r\n        return (\r\n            <div className=\"TabContainer\">\r\n                <div className=\"TabList\">\r\n                    {tabList}\r\n                </div>\r\n                <Divider/>\r\n                <div className=\"TabContent\">\r\n                    <div>\r\n                        {tabCont}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import request from \"../utils/request\";\r\n\r\nexport const importUploadFile = (f: any, f_type: string) => {\r\n    const data = new FormData();\r\n    data.append('file', f, f.name);\r\n    data.append(\"file_type\", f_type);\r\n    return request ({\r\n        url:     'trading/forex/file/upload',\r\n        method:  'post',\r\n        headers: {'Content-Type': 'multipart/form-data'},\r\n        data:    data,\r\n    })\r\n}\r\n\r\nexport const initializeDB = () => {\r\n    return request ({\r\n        url:     'trading/forex/db/initialize',\r\n    })\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Radio, message } from 'antd';\r\n\r\nimport { initializeDB, importUploadFile } from \"../../../api/trading\";\r\n\r\nclass DataImport extends Component {\r\n    state = {\r\n         upload_file: '',\r\n         upload_file_type: ''\r\n    }\r\n\r\n    generateInitializeBtn = () => {\r\n        return <button onClick={this.handleInitializeBtnonClick}>初始化数据库</button>\r\n    }\r\n\r\n        handleInitializeBtnonClick = () => {\r\n            initializeDB().then((response)=>{\r\n                if (response.data.code==200){\r\n                    message.success(response.data.message);\r\n                }\r\n                else {\r\n                    console.log(response.data.message);\r\n                    message.warn(response.data.message);\r\n                }\r\n            })\r\n        }\r\n\r\n    generateUploadBtn = () => {\r\n        const UploadBtn =\r\n            <input type = \"file\"\r\n                   id = \"forex_tester\"\r\n                   accept = \".txt\"\r\n                   onChange={this.handleUploadBtnonChange}\r\n                >\r\n            </input>\r\n        return UploadBtn\r\n    }\r\n\r\n        handleUploadBtnonChange= (e:any) => {\r\n            console.log('handleUploadBtnonChange');\r\n            const filelist = e.currentTarget.files;\r\n            if(filelist.length>0){\r\n                const upload_file = filelist[0];\r\n                console.log(upload_file);\r\n                this.setState({\r\n                    upload_file: upload_file,\r\n                })\r\n            }\r\n        }\r\n\r\n    generateRadioGroup = () => {\r\n        const options = [\r\n              { label: 'Forex Tester', value: 'forex_tester' },\r\n            ];\r\n        const RadioGroup = (\r\n            <Radio.Group\r\n              options={options}\r\n              onChange={this.handleRadioGrouponChange}\r\n              value={this.state.upload_file_type}\r\n            />\r\n        )\r\n        return RadioGroup\r\n    }\r\n\r\n        handleRadioGrouponChange = (e:any) =>{\r\n            this.setState({\r\n                upload_file_type: e.target.value\r\n            })\r\n        }\r\n\r\n    generateSubmitBtn = () => {\r\n        return <button onClick={this.handleSubmitBtnonClick}>\r\n            导入数据库\r\n        </button>\r\n    }\r\n\r\n        handleSubmitBtnonClick= () => {\r\n            console.log('handleSubmitBtnonClick');\r\n            const { upload_file, upload_file_type } = this.state;\r\n            importUploadFile(upload_file, upload_file_type).then((response)=>{\r\n                if (response.data.code==200){\r\n                    message.success(response.data.message);\r\n                }\r\n                else {\r\n                    console.log(response.data.message);\r\n                    message.warn(response.data.message);\r\n                }\r\n            })\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'DataImport'}>\r\n                <div>\r\n                    <h4>数据初始化</h4>\r\n                    {this.generateInitializeBtn()}\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <h4>历史数据上传</h4>\r\n                    <div>\r\n                        {this.generateUploadBtn()}\r\n                        {this.generateRadioGroup()}\r\n                    </div>\r\n                    {this.generateSubmitBtn()}\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <h4>缺失数据填充</h4>\r\n                </div>\r\n                <div>\r\n                    <h4>高周期数据生成</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataImport;","import React, { PureComponent } from 'react';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport echarts from 'echarts';\r\n\r\nclass ReactEChartsTest extends PureComponent {\r\n    getOption = () => {\r\n        return {\r\n            title: {\r\n\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量']\r\n            },\r\n            xAxis: {\r\n                data: ['衬衫', '羊毛衫', '雪纺纱', '裤子', '高跟鞋', '袜子']\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: [5,20,36,10,10,20]\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={this.getOption()}\r\n                notMerge={true}\r\n                lazyUpdate={true}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReactEChartsTest;\r\n","import React, {Component} from 'react';\r\n\r\nimport {Card} from 'antd';\r\nimport EchartsTest from \"../../../components/ECharts\";\r\nimport ReactEChartsTest from '../../../components/EchartsForReact';\r\n\r\nclass DataDisplay extends React.Component<any, any> {\r\n    render(){\r\n        return(\r\n          <div>\r\n              <Card>\r\n                 <ReactEChartsTest />\r\n              </Card>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataDisplay;","import React, {Component} from 'react';\r\n\r\nclass DataPredict extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                走势预测\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataPredict;","import React, {Component} from 'react';\r\n\r\nimport TabContainer from \"../../../components/TabContainer/TabContainer\";\r\nimport DataImport from \"./DataImport\";\r\nimport DataDisplay from \"./DataDisplay\";\r\nimport DataPredict from \"./DataPredict\";\r\n\r\nimport \"./ForexTrading.css\";\r\n\r\nclass ForexTrading extends Component {\r\n    state = {\r\n        tabs : [\r\n            {id:1, tabName: '数据导入', tabCont: <DataImport/>},\r\n            {id:2, tabName: '行情展示', tabCont: <DataDisplay/>},\r\n            {id:3, tabName: '走势预测', tabCont: <DataPredict/>}\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'ForexTrading'}>\r\n                <div className={'intro'}>\r\n                    Welcome to Forex Trading!\r\n                </div>\r\n                <div className={'content'}>\r\n                    <TabContainer\r\n                        tabs = {this.state.tabs}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForexTrading;"],"sourceRoot":""}